N1,N2,
N1,N3,
N1,N4,
N1,,1;2;5
N2,,2;3
N3,,2;4;5
N4,,1;5

Check node: Node { bag: Bag { vertices: [0, 1, 4] }, node_type: Join, next: 0, prev: [2, 6], max_is: {[]: 5, [0, 4]: 0, [0, 1]: 0, [1, 4]: 8, [4]: 4, [1]: 7, [0, 1, 4]: 0, [0]: 10} }
[0] - combined from Join

Check node: Node { bag: Bag { vertices: [0, 1, 4] }, node_type: Introduce(0), next: 1, prev: [3], max_is: {[4]: 4, [1]: 7, []: 3, [1, 4]: 8, [0]: 8, [0, 1]: 0, [0, 1, 4]: 0, [0, 4]: 0} }
[0] - from Introduce

Check node: Node { bag: Bag { vertices: [1, 4] }, node_type: Introduce(4), next: 2, prev: [4], max_is: {[1]: 7, [4]: 4, [1, 4]: 8, []: 3} }

Check node: Node { bag: Bag { vertices: [1] }, node_type: Forget(2), next: 3, prev: [5], max_is: {[]: 3, [1]: 7} }
[2] - from Forget

Check node: Node { bag: Bag { vertices: [1, 2] }, node_type: Leaf, next: 4, prev: [], max_is: {[]: 0, [1, 2]: 0, [1]: 7, [2]: 3} }

Check node: Node { bag: Bag { vertices: [0, 1, 4] }, node_type: Join, next: 1, prev: [7, 10], max_is: {[0, 1]: 0, []: 2, [1]: 7, [0]: 7, [4]: 1, [0, 4]: 0, [0, 1, 4]: 0, [1, 4]: 8} }
[0] - left from Join

Check node: Node { bag: Bag { vertices: [0, 1, 4] }, node_type: Introduce(0), next: 6, prev: [8], max_is: {[1, 4]: 8, [4]: 1, [1]: 7, []: 2, [0, 1]: 0, [0]: 7, [0, 4]: 0, [0, 1, 4]: 0} }
[0] - from Introduce

Check node: Node { bag: Bag { vertices: [1, 4] }, node_type: Forget(3), next: 7, prev: [9], max_is: {[]: 2, [1]: 7, [4]: 1, [1, 4]: 8} }
[3] - from Forget

Check node: Node { bag: Bag { vertices: [1, 3, 4] }, node_type: Leaf, next: 8, prev: [], max_is: {[3]: 2, [1, 4]: 8, [1, 3]: 0, [3, 4]: 0, [1]: 7, [1, 3, 4]: 0, []: 0, [4]: 1} }